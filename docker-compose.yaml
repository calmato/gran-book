version: '3.8'

services:
  # Frontend
  native:
    container_name: gran_book_native
    build:
      context: ./infra/docker/native
      dockerfile: Dockerfile_development
    working_dir: /var/native
    volumes:
      - ./native:/var/native:cached
    ports:
      - 19000:19000
      - 19001:19001
      - 19002:19002
    environment:
      - REACT_NATIVE_PACKAGER_HOSTNAME=${LOCAL_IP_ADDRESS}
      - API_URL=${NATIVE_API_URL}
    command: yarn start

  admin:
    container_name: gran_book_admin
    build:
      context: ./infra/docker/web/admin
      dockerfile: Dockerfile_development
    working_dir: /var/web/admin
    volumes:
      - ./web/admin:/var/web/admin:cached
    ports:
      - 3000:3000
    environment:
      - FIREBASE_API_KEY=${FIREBASE_API_KEY}
      - FIREBASE_PROJECT_ID=${FIREBASE_PROJECT_ID}
      - FIREBASE_MESSAGING_SENDER_ID=${FIREBASE_MESSAGING_SENDER_ID}
      - API_URL=${ADMIN_API_URL}
    command: yarn dev -H 0.0.0.0 -p 3000

  # Backend
  native_gateway:
    container_name: gran_book_native_gateway
    build:
      context: ./infra/docker/api/gateway/native
      dockerfile: Dockerfile_development
    working_dir: /var/gateway
    volumes:
      - ./api/gateway/native:/var/gateway:cached
      - ./tmp/logs/native_gateway:/var/log/gateway:delegated
    environment:
      - HOST=0.0.0.0
      - PORT=8080
      - LOG_PATH=/var/log/gateway
      - USER_API_URL=${USER_API_URL}
      - FIREBASE_PROJECT_ID=${FIREBASE_PROJECT_ID}
      - FIREBASE_CLIENT_EMAIL=${FIREBASE_CLIENT_EMAIL}
      - FIREBASE_PRIVATE_KEY=${FIREBASE_PRIVATE_KEY}
    ports:
      - 8080:8080
    networks:
      - api
      - monitoring
    command: yarn dev

  admin_gateway:
    container_name: gran_book_admin_gateway
    build:
      context: ./infra/docker/api/gateway/admin
      dockerfile: Dockerfile_development
    working_dir: /var/gateway
    volumes:
      - ./api/gateway/admin:/var/gateway:cached
      - ./tmp/logs/admin_gateway:/var/log/gateway:delegated
    environment:
      - HOST=0.0.0.0
      - PORT=8080
      - LOG_PATH=/var/log/gateway
      - USER_API_URL=${USER_API_URL}
      - FIREBASE_PROJECT_ID=${FIREBASE_PROJECT_ID}
      - FIREBASE_CLIENT_EMAIL=${FIREBASE_CLIENT_EMAIL}
      - FIREBASE_PRIVATE_KEY=${FIREBASE_PRIVATE_KEY}
    ports:
      - 8081:8080
    networks:
      - api
      - monitoring
    command: yarn dev

  user_api:
    container_name: gran_book_user_api
    build:
      context: ./infra/docker/api/server/user
      dockerfile: Dockerfile_development
    working_dir: /go/src/github.com/calmato/gran-book/api/server/user
    volumes:
      - ./api/server/user:/go/src/github.com/calmato/gran-book/api/server/user:cached
      - ./tmp/data/go/pkg/mod:/go/pkg/mod:delegated
      - ./tmp/logs/user_api:/var/log/api:delegated
    environment:
      - PORT=8080
      - LOG_PATH=/var/log/api
      - LOG_LEVEL=${LOG_LEVEL}
      - DB_HOST=${MYSQL_HOST}
      - DB_PORT=${MYSQL_PORT}
      - DB_USERNAME=${MYSQL_USERNAME}
      - DB_PASSWORD=${MYSQL_PASSWORD}
      - DB_DATABASE=${MYSQL_USER_DATABASE}
      - GCP_SERVICE_KEY_JSON=${GCP_SERVICE_KEY_JSON}
      - GCP_STORAGE_BUCKET_NAME=${GCP_STORAGE_BUCKET_NAME}
    networks:
      - api
      - monitoring
    command: realize start
    depends_on:
      - mysql

  # Database
  mysql:
    container_name: gran_book_mysql
    platform: linux/x86_64
    build:
      context: ./infra/docker/infra/mysql
      dockerfile: Dockerfile
    volumes:
      - ./infra/mysql/development.cnf:/etc/mysql/conf.d/my.cnf
      - ./infra/mysql/sql:/docker-entrypoint-initdb.d
      - ./tmp/logs/mysql:/var/log/mysql:delegated
      - ./tmp/data/mysql:/var/lib/mysql:delegated
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_PASSWORD}
    ports:
      - 3316:3306
    networks:
      - api
      - monitoring

  # Monitoring
  grafana:
    container_name: gran_book_grafana
    build:
      context: ./infra/docker/infra/grafana
      dockerfile: Dockerfile
    ports:
      - 9000:3000
    networks:
      - monitoring

  prometheus:
    container_name: gran_book_prometheus
    build:
      context: ./infra/docker/infra/prometheus
      dockerfile: Dockerfile
    volumes:
      - ./infra/prometheus/development.yaml:/etc/prometheus/prometheus.yaml:cached
    ports:
      - 9090:9090
    networks:
      - monitoring
    command: --config.file=/etc/prometheus/prometheus.yaml

  # Other
  proto:
    container_name: gran_book_proto
    build:
      context: ./infra/docker/proto
      dockerfile: Dockerfile
    working_dir: /go/src/github.com/calmato/gran-book/proto
    volumes:
      - ./proto:/go/src/github.com/calmato/gran-book/proto:cached
      - ./api/server/user:/go/src/github.com/calmato/gran-book/api/server/user:cached
      - ./api/gateway/admin:/go/src/github.com/calmato/gran-book/api/gateway/admin:cached
      - ./api/gateway/native:/go/src/github.com/calmato/gran-book/api/gateway/native:cached
      - ./tmp/data/go/pkg/mod:/go/pkg/mod:delegated

  swagger:
    container_name: gran_book_swagger
    build:
      context: ./infra/docker/infra/swagger_ui
      dockerfile: Dockerfile
    volumes:
      - ./docs/12_backend/11_swagger/admin.apiv1.yaml:/var/swagger/admin.yaml:cached
      - ./docs/12_backend/11_swagger/native.apiv1.yaml:/var/swagger/native.yaml:cached
    ports:
      - 8000:8080
    environment:
      SWAGGER_JSON: /var/swagger/native.yaml

  swagger_editor:
    container_name: gran_book_swagger_editor
    build:
      context: ./infra/docker/infra/swagger_editor
      dockerfile: Dockerfile
    ports:
      - 8001:8080

  terraform:
    container_name: gran_book_terraform
    build:
      context: ./infra/docker/infra/terraform
      dockerfile: Dockerfile
    working_dir: /var/terraform
    volumes:
      - ./infra/terraform:/var/terraform:cached
      - ./secrets:/secrets
    tty: true
    stdin_open: true
    environment:
      - GOOGLE_CLOUD_KEYFILE_JSON=${TERRAFORM_CREDENTIALS}
      - GOOGLE_APPLICATION_CREDENTIALS=${TERRAFORM_CREDENTIALS}

networks:
  api:
    driver: bridge
  monitoring:
    driver: bridge
