version: '3.8'

services:
  # Frontend
  native:
    container_name: gran_book_native
    build:
      context: ./infra/docker/native
      dockerfile: Dockerfile_development
    working_dir: /var/native
    volumes:
      - ./native:/var/native:cached
    ports:
      - 19000:19000
      - 19001:19001
      - 19002:19002
    environment:
      - REACT_NATIVE_PACKAGER_HOSTNAME=${LOCAL_IP_ADDRESS}
      - API_URL=${NATIVE_API_URL}
    command: yarn start

  admin:
    container_name: gran_book_admin
    build:
      context: ./infra/docker/web/admin
      dockerfile: Dockerfile_development
    working_dir: /var/web/admin
    volumes:
      - ./web/admin:/var/web/admin:cached
    ports:
      - 3000:3000
    environment:
      - FIREBASE_API_KEY=${FIREBASE_API_KEY}
      - FIREBASE_PROJECT_ID=${FIREBASE_PROJECT_ID}
      - FIREBASE_MESSAGING_SENDER_ID=${FIREBASE_MESSAGING_SENDER_ID}
      - API_URL=${ADMIN_API_URL}
    command: yarn dev -H 0.0.0.0 -p 3000

  # Backend (BFF)
  native_gateway:
    container_name: gran_book_native_gateway
    build:
      context: ./infra/docker/api/common
      dockerfile: Dockerfile_development
    working_dir: /go/src/github.com/calmato/gran-book/api
    volumes:
      - ./api:/go/src/github.com/calmato/gran-book/api:cached
      - ./tmp/data/go/pkg/mod:/go/pkg/mod:delegated
      - ./tmp/logs/native_gateway:/var/log/gateway:delegated
    environment:
      - PORT=8080
      - LOG_PATH=/var/log/gateway
      - GCP_SERVICE_KEY_JSON=${GCP_SERVICE_KEY_JSON}
      - GCP_STORAGE_BUCKET_NAME=${GCP_STORAGE_BUCKET_NAME}
    ports:
      - 8080:8080
    command: make dev SERVICE=gateway/native
    networks:
      - api

  admin_gateway:
    container_name: gran_book_admin_gateway
    build:
      context: ./infra/docker/api/gateway/admin
      dockerfile: Dockerfile
    working_dir: /go/src/github.com/calmato/gran-book/api
    volumes:
      - ./api:/go/src/github.com/calmato/gran-book/api:cached
      - ./tmp/data/go/pkg/mod:/go/pkg/mod:delegated
      - ./tmp/logs/admin_gateway:/var/log/gateway:delegated
    environment:
      - PORT=8080
      - LOG_PATH=/var/log/gateway
      - GCP_SERVICE_KEY_JSON=${GCP_SERVICE_KEY_JSON}
      - GCP_STORAGE_BUCKET_NAME=${GCP_STORAGE_BUCKET_NAME}
    ports:
      - 8081:8080
    command: make dev SERVICE=gateway/admin
    networks:
      - api

  # Backend (Microservice)
  user_api:
    container_name: gran_book_user_api
    build:
      context: ./infra/docker/api/user
      dockerfile: Dockerfile
    working_dir: /go/src/github.com/calmato/gran-book/api
    volumes:
      - ./api:/go/src/github.com/calmato/gran-book/api:cached
      - ./tmp/data/go/pkg/mod:/go/pkg/mod:delegated
      - ./tmp/logs/user_api:/var/log/api:delegated
    environment:
      - PORT=8080
      - LOG_PATH=/var/log/api
      - LOG_LEVEL=${LOG_LEVEL}
      - DB_HOST=mysql
      - DB_PORT=3306
      - DB_USERNAME=${MYSQL_USERNAME}
      - DB_PASSWORD=${MYSQL_PASSWORD}
      - DB_DATABASE=${MYSQL_USER_DATABASE}
      - GCP_SERVICE_KEY_JSON=${GCP_SERVICE_KEY_JSON}
      - GCP_STORAGE_BUCKET_NAME=${GCP_STORAGE_BUCKET_NAME}
    ports:
      - 18080:8080
    command: make dev SERVICE=user
    networks:
      - api
    depends_on:
      - mysql

  book_api:
    container_name: gran_book_book_api
    build:
      context: ./infra/docker/api/book
      dockerfile: Dockerfile
    working_dir: /go/src/github.com/calmato/gran-book/api
    volumes:
      - ./api:/go/src/github.com/calmato/gran-book/api:cached
      - ./tmp/data/go/pkg/mod:/go/pkg/mod:delegated
      - ./tmp/logs/book_api:/var/log/api:delegated
    environment:
      - PORT=8080
      - LOG_PATH=/var/log/api
      - LOG_LEVEL=${LOG_LEVEL}
      - DB_HOST=mysql
      - DB_PORT=3306
      - DB_USERNAME=${MYSQL_USERNAME}
      - DB_PASSWORD=${MYSQL_PASSWORD}
      - DB_DATABASE=${MYSQL_BOOK_DATABASE}
      - GCP_SERVICE_KEY_JSON=${GCP_SERVICE_KEY_JSON}
      - GCP_STORAGE_BUCKET_NAME=${GCP_STORAGE_BUCKET_NAME}
    ports:
      - 18081:8080
    command: make dev SERVICE=book
    networks:
      - api
    depends_on:
      - mysql

  information_api:
    container_name: gran_book_information_api
    build:
      context: ./infra/docker/api/information
      dockerfile: Dockerfile
    working_dir: /go/src/github.com/calmato/gran-book/api
    volumes:
      - ./api:/go/src/github.com/calmato/gran-book/api:cached
      - ./tmp/data/go/pkg/mod:/go/pkg/mod:delegated
      - ./tmp/logs/book_api:/var/log/api:delegated
    environment:
      - PORT=8080
      - LOG_PATH=/var/log/api
      - LOG_LEVEL=${LOG_LEVEL}
      - DB_HOST=mysql
      - DB_PORT=3306
      - DB_USERNAME=${MYSQL_USERNAME}
      - DB_PASSWORD=${MYSQL_PASSWORD}
      - DB_DATABASE=${MYSQL_INFORMATION_DATABASE}
      - GCP_SERVICE_KEY_JSON=${GCP_SERVICE_KEY_JSON}
      - GCP_STORAGE_BUCKET_NAME=${GCP_STORAGE_BUCKET_NAME}
    ports:
      - 18081:8080
    command: make dev SERVICE=information
    networks:
      - api
    depends_on:
      - mysql

  # Database
  mysql:
    container_name: gran_book_mysql
    platform: linux/x86_64
    build:
      context: ./infra/docker/infra/mysql
      dockerfile: Dockerfile
    volumes:
      - ./infra/mysql/development.cnf:/etc/mysql/conf.d/my.cnf
      - ./infra/mysql/sql:/docker-entrypoint-initdb.d
      - ./tmp/logs/mysql:/var/log/mysql:delegated
      - ./tmp/data/mysql:/var/lib/mysql:delegated
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_PASSWORD}
    ports:
      - 3316:3306
    networks:
      - api

  mysql_test:
    container_name: gran_book_mysql_test
    platform: linux/x86_64
    build:
      context: ./infra/docker/infra/mysql
      dockerfile: Dockerfile.test
    volumes:
      - ./infra/mysql/test.cnf:/etc/mysql/conf.d/my.cnf
      - ./infra/mysql/sql:/docker-entrypoint-initdb.d
      - ./tmp/logs/mysql_test:/var/log/mysql:delegated
      - ./tmp/data/mysql_test:/var/lib/mysql:delegated
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_PASSWORD}
    ports:
      - 3326:3306
    networks:
      - api

  # Other
  proto:
    container_name: gran_book_proto
    build:
      context: ./infra/docker/proto
      dockerfile: Dockerfile
    working_dir: /go/src/github.com/calmato/gran-book/proto
    volumes:
      - ./api:/go/src/github.com/calmato/gran-book/api:cached
      - ./native:/go/src/github.com/calmato/gran-book/native:cached
      - ./proto:/go/src/github.com/calmato/gran-book/proto:cached
      - ./web/admin:/go/src/github.com/calmato/gran-book/web/admin:cached
      - ./tmp/data/go/pkg/mod:/go/pkg/mod:delegated

  swagger_native:
    container_name: gran_book_swagger_native
    build:
      context: ./infra/docker/infra/swagger/admin
      dockerfile: Dockerfile
    volumes:
      - ./tmp/data/swagger/native/openapi:/var/swagger:cached
    ports:
      - 8000:8080
    environment:
      SWAGGER_JSON: /var/swagger/openapi.yaml
    depends_on:
      - swagger_generator

  swagger_admin:
    container_name: gran_book_swagger_admin
    build:
      context: ./infra/docker/infra/swagger/admin
      dockerfile: Dockerfile
    volumes:
      - ./tmp/data/swagger/admin/openapi:/var/swagger:cached
    ports:
      - 8001:8080
    environment:
      SWAGGER_JSON: /var/swagger/openapi.yaml
    depends_on:
      - swagger_generator

  swagger_generator:
    container_name: gran_book_swagger_generator
    working_dir: /var/swagger/src
    build:
      context: ./infra/docker/infra/swagger/generator
      dockerfile: Dockerfile
    volumes:
      - ./docs/12_backend/11_swagger:/var/swagger/src:cached
      - ./tmp/data/swagger:/tmp/data/swagger:cached
    command: yarn watch

  terraform:
    container_name: gran_book_terraform
    build:
      context: ./infra/docker/infra/terraform
      dockerfile: Dockerfile
    working_dir: /var/terraform
    volumes:
      - ./infra/terraform:/var/terraform:cached
      - ./secrets:/secrets
    tty: true
    stdin_open: true
    environment:
      - GOOGLE_CLOUD_KEYFILE_JSON=${TERRAFORM_CREDENTIALS}
      - GOOGLE_APPLICATION_CREDENTIALS=${TERRAFORM_CREDENTIALS}

networks:
  api:
    driver: bridge
