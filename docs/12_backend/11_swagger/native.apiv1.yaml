openapi: 3.0.0
info:
  title: Gran Book (Native)
  description: ネイティブアプリ用API
  version: 0.5.0
servers:
  - url: http://localhost:8080
    description: 開発環境
  - url: https://api.gran-book-stg.calmato.work
    description: 検証環境
paths:
  /v1/auth:
    get:
      summary: 認証情報取得
      tags:
        - AuthService
      security:
        - BearerAuth: []
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/authResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
    post:
      summary: ユーザ情報登録
      tags:
        - AuthService
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createAuthRequest'
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/authResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
  /v1/auth/email:
    patch:
      summary: メールアドレス更新
      tags:
        - AuthService
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateAuthEmailRequest'
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/authResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
  /v1/auth/password:
    patch:
      summary: パスワード更新
      tags:
        - AuthService
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateAuthPasswordRequest'
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/authResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
  /v1/auth/profile:
    patch:
      summary: プロフィール更新
      tags:
        - AuthService
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateAuthProfileRequest'
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/authResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
  /v1/auth/address:
    patch:
      summary: 住所更新
      tags:
        - AuthService
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateAuthAddressRequest'
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/authResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
  /v1/users/{userId}/profile:
    get:
      summary: ユーザプロフィール取得
      tags:
        - UserService
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: userId
          schema:
            type: string
          required: true
          description: ユーザーID
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/userProfileResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
  /v1/users/{userId}/follow:
    get:
      summary: フォロー一覧取得
      tags:
        - UserService
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: userId
          schema:
            type: string
          required: true
          description: ユーザーID
        - in: query
          name: limit
          schema:
            type: integer
          required: false
          description: 取得上限数
        - in: query
          name: offset
          schema:
            type: integer
          required: false
          description: 取得開始位置
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/followListResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
    post:
      summary: フォロー登録
      tags:
        - UserService
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: userId
          schema:
            type: string
          required: true
          description: ユーザーID
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/userProfileResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
    delete:
      summary: フォロー解除
      tags:
        - UserService
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: userId
          schema:
            type: string
          required: true
          description: ユーザーID
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/userProfileResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
  /v1/users/{userId}/follower:
    get:
      summary: フォロワー一覧取得
      tags:
        - UserService
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: userId
          schema:
            type: string
          required: true
          description: ユーザーID
        - in: query
          name: limit
          schema:
            type: integer
          required: false
          description: 取得上限数
        - in: query
          name: offset
          schema:
            type: integer
          required: false
          description: 取得開始位置
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/followerListResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
tags:
  - name: AuthService
    description: 認証関連
  - name: UserService
    description: ユーザ関連
components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
  schemas:
    # Request
    createAuthRequest:
      type: object
      properties:
        username:
          type: string
        email:
          type: string
        password:
          type: string
        passwordConfirmation:
          type: string
    updateAuthEmailRequest:
      type: object
      properties:
        email:
          type: string
    updateAuthPasswordRequest:
      type: object
      properties:
        password:
          type: string
        passwordConfirmation:
          type: string
    updateAuthProfileRequest:
      type: object
      properties:
        username:
          type: string
        gender:
          type: integer
          format: int32
        thumbnail:
          type: string
          format: byte
        selfIntroduction:
          type: string
    updateAuthAddressRequest:
      type: object
      properties:
        lastName:
          type: string
        firstName:
          type: string
        lastNameKana:
          type: string
        firstNameKana:
          type: string
        postalCode:
          type: string
        prefecture:
          type: string
        city:
          type: string
        addressLine1:
          type: string
        addressLine2:
          type: string
    # Response
    authResponse:
      type: object
      properties:
        id:
          type: string
        username:
          type: string
        gender:
          type: integer
          format: int32
        email:
          type: string
        phoneNumber:
          type: string
        role:
          type: integer
          format: int32
        thumbnailUrl:
          type: string
        selfIntroduction:
          type: string
        lastName:
          type: string
        firstName:
          type: string
        lastNameKana:
          type: string
        firstNameKana:
          type: string
        postalCode:
          type: string
        prefecture:
          type: string
        city:
          type: string
        addressLine1:
          type: string
        addressLine2:
          type: string
        createdAt:
          type: string
        updatedAt:
          type: string
    userProfileResponse:
      type: object
      properties:
        id:
          type: string
        username:
          type: string
        thumbnailUrl:
          type: string
        selfIntroduction:
          type: string
        isFollow:
          type: boolean
        isFollower:
          type: boolean
        followCount:
          type: integer
        followerCount:
          type: integer
        rating:
          type: integer
        products:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
              name:
                type: string
              thumbnailUrl:
                type: string
              authors:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    name:
                      type: string
    followListResponse:
      type: object
      properties:
        users:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
              username:
                type: string
              thumbnailUrl:
                type: string
              isFollow:
                type: boolean
        limit:
          type: integer
          format: int64
        offset:
          type: integer
          format: int64
        total:
          type: integer
          format: int64
    followerListResponse:
      type: object
      properties:
        users:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
              username:
                type: string
              thumbnailUrl:
                type: string
              selfIntroduction:
                type: string
              isFollow:
                type: boolean
        limit:
          type: integer
          format: int64
        offset:
          type: integer
          format: int64
        total:
          type: integer
          format: int64
    errorResponse:
      type: object
      properties:
        status:
          type: integer
          format: int32
        code:
          type: integer
          format: int32
        message:
          type: string
        errors:
          type: array
          items:
            type: object
            properties:
              field:
                type: string
              reason:
                type: string
