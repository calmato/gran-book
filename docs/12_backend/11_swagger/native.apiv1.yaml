openapi: 3.0.0
info:
  title: Gran Book (Native)
  description: ネイティブアプリ用API
  version: 0.5.0
servers:
  - url: http://localhost:8080
    description: 開発環境
  - url: https://api.gran-book-stg.calmato.work
    description: 検証環境
paths:
  /v1/auth:
    get:
      summary: 認証情報取得
      tags:
        - AuthService
      security:
        - BearerAuth: []
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/authResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
    post:
      summary: ユーザ情報登録
      tags:
        - AuthService
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createAuthRequest'
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/authResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
    delete:
      summary: ユーザ退会
      tags:
        - AuthService
      security:
        - BearerAuth: []
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/emptyResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
  /v1/auth/email:
    patch:
      summary: メールアドレス更新
      tags:
        - AuthService
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateAuthEmailRequest'
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/authResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
  /v1/auth/password:
    patch:
      summary: パスワード更新
      tags:
        - AuthService
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateAuthPasswordRequest'
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/authResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
  /v1/auth/profile:
    patch:
      summary: プロフィール更新
      tags:
        - AuthService
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateAuthProfileRequest'
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/authResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
  /v1/auth/address:
    patch:
      summary: 住所更新
      tags:
        - AuthService
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateAuthAddressRequest'
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/authResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
  /v1/auth/device:
    post:
      summary: デバイスID登録
      tags:
        - AuthService
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/registerAuthDeviceRequest'
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/authResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
  /v1/auth/thumbnail:
    post:
      summary: サムネイルアップロード
      tags:
        - AuthService
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/uploadAuthThumbnailRequest'
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/authThumbnailResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
  /v1/users/{userId}/profile:
    get:
      summary: ユーザプロフィール取得
      tags:
        - UserService
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: userId
          schema:
            type: string
          required: true
          description: ユーザーID
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/userProfileResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
  /v1/users/{userId}/follow:
    get:
      summary: フォロー一覧取得
      tags:
        - UserService
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: userId
          schema:
            type: string
          required: true
          description: ユーザーID
        - in: query
          name: limit
          schema:
            type: integer
          required: false
          description: 取得上限数
        - in: query
          name: offset
          schema:
            type: integer
          required: false
          description: 取得開始位置
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/followListResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
    post:
      summary: フォロー登録
      tags:
        - UserService
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: userId
          schema:
            type: string
          required: true
          description: ユーザーID
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/userProfileResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
    delete:
      summary: フォロー解除
      tags:
        - UserService
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: userId
          schema:
            type: string
          required: true
          description: ユーザーID
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/userProfileResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
  /v1/users/{userId}/follower:
    get:
      summary: フォロワー一覧取得
      tags:
        - UserService
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: userId
          schema:
            type: string
          required: true
          description: ユーザーID
        - in: query
          name: limit
          schema:
            type: integer
          required: false
          description: 取得上限数
        - in: query
          name: offset
          schema:
            type: integer
          required: false
          description: 取得開始位置
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/followerListResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
  /v1/books:
    post:
      summary: 書籍登録
      tags:
        - BookService
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createBookRequest'
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/bookResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
    patch:
      summary: 書籍更新
      tags:
        - BookService
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateBookRequest'
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/bookResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
  /v1/books/{isbn}:
    get:
      summary: 書籍情報取得
      tags:
        - BookService
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: isbn
          schema:
            type: string
          required: true
          description: ISBN
        - in: query
          name: limit
          schema:
            type: integer
          required: false
          description: 取得上限数
        - in: query
          name: offset
          schema:
            type: integer
          required: false
          description: 取得開始位置
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/bookResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
  /v1/users/{userId}/books:
    get:
      summary: 本棚の書籍一覧
      tags:
        - BookService
        - UserService
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: userId
          schema:
            type: string
          required: true
          description: ユーザID
        - in: query
          name: limit
          schema:
            type: integer
          required: false
          description: 取得上限数
        - in: query
          name: offset
          schema:
            type: integer
          required: false
          description: 取得開始位置
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/bookshelfListResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
  /v1/users/{userId}/books/{bookId}:
    get:
      summary: 本棚の書籍情報取得
      tags:
        - BookService
        - UserService
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: userId
          schema:
            type: string
          required: true
          description: ユーザID
        - in: path
          name: bookId
          schema:
            type: integer
            format: int64
          required: true
          description: 書籍ID
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/bookshelfResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
    delete:
      summary: 本棚削除
      tags:
        - BookService
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: userId
          schema:
            type: string
          required: true
          description: ユーザID
        - in: path
          name: bookId
          schema:
            type: integer
            format: int64
          required: true
          description: 書籍ID
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/emptyResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
  /v1/users/{userId}/books/{bookId}/read:
    post:
      summary: 読んだ本の登録
      tags:
        - BookService
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: userId
          schema:
            type: string
          required: true
          description: ユーザID
        - in: path
          name: bookId
          schema:
            type: integer
            format: int64
          required: true
          description: 書籍ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/readBookshelfRequest'
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/bookshelfResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
  /v1/users/{userId}/books/{bookId}/reading:
    post:
      summary: 読んでいる本の登録
      tags:
        - BookService
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: userId
          schema:
            type: string
          required: true
          description: ユーザID
        - in: path
          name: bookId
          schema:
            type: integer
            format: int64
          required: true
          description: 書籍ID
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/bookshelfResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
  /v1/users/{userId}/books/{bookId}/stack:
    post:
      summary: 積読本の登録
      tags:
        - BookService
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: userId
          schema:
            type: string
          required: true
          description: ユーザID
        - in: path
          name: bookId
          schema:
            type: integer
            format: int64
          required: true
          description: 書籍ID
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/bookshelfResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
  /v1/users/{userId}/books/{bookId}/want:
    post:
      summary: 欲しい本の登録
      tags:
        - BookService
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: userId
          schema:
            type: string
          required: true
          description: ユーザID
        - in: path
          name: bookId
          schema:
            type: integer
            format: int64
          required: true
          description: 書籍ID
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/bookshelfResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
  /v1/users/{userId}/books/{bookId}/release:
    post:
      summary: 手放したい本の登録
      tags:
        - BookService
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: userId
          schema:
            type: string
          required: true
          description: ユーザID
        - in: path
          name: bookId
          schema:
            type: integer
            format: int64
          required: true
          description: 書籍ID
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/bookshelfResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
tags:
  - name: AuthService
    description: 認証関連
  - name: UserService
    description: ユーザ関連
  - name: BookService
    description: 書籍関連
components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
  schemas:
    # Request
    createAuthRequest:
      type: object
      properties:
        username:
          type: string
        email:
          type: string
        password:
          type: string
        passwordConfirmation:
          type: string
    updateAuthEmailRequest:
      type: object
      properties:
        email:
          type: string
    updateAuthPasswordRequest:
      type: object
      properties:
        password:
          type: string
        passwordConfirmation:
          type: string
    updateAuthProfileRequest:
      type: object
      properties:
        username:
          type: string
        gender:
          type: integer
          format: int32
        thumbnailUrl:
          type: string
          format: byte
        selfIntroduction:
          type: string
    updateAuthAddressRequest:
      type: object
      properties:
        lastName:
          type: string
        firstName:
          type: string
        lastNameKana:
          type: string
        firstNameKana:
          type: string
        phoneNumber:
          type: string
        postalCode:
          type: string
        prefecture:
          type: string
        city:
          type: string
        addressLine1:
          type: string
        addressLine2:
          type: string
    registerAuthDeviceRequest:
      type: object
      properties:
        instanceId:
          type: string
    uploadAuthThumbnailRequest:
      type: object
      properties:
        thumbnail:
          type: string
          format: binary
    createBookRequest:
      type: object
      properties:
        title:
          type: string
        titleKana:
          type: string
        itemCaption:
          type: string
        isbn:
          type: string
        publisherName:
          type: string
        salesDate:
          type: string
        largeImageUrl:
          type: string
        mediumImageUrl:
          type: string
        smallImageUrl:
          type: string
        itemUrl:
          type: string
        booksGenreId:
          type: string
        author:
          type: string
        authorKana:
          type: string
    updateBookRequest:
      type: object
      properties:
        title:
          type: string
        titleKana:
          type: string
        itemCaption:
          type: string
        isbn:
          type: string
        publisherName:
          type: string
        salesDate:
          type: string
        largeImageUrl:
          type: string
        mediumImageUrl:
          type: string
        smallImageUrl:
          type: string
        itemUrl:
          type: string
        booksGenreId:
          type: string
        author:
          type: string
        authorKana:
          type: string
    readBookshelfRequest:
      type: object
      properties:
        impression:
          type: string
        readOn:
          type: string
    # Response
    emptyResponse:
      type: object
    authResponse:
      type: object
      properties:
        id:
          type: string
        username:
          type: string
        gender:
          type: integer
          format: int32
        email:
          type: string
        phoneNumber:
          type: string
        role:
          type: integer
          format: int32
        thumbnailUrl:
          type: string
        selfIntroduction:
          type: string
        lastName:
          type: string
        firstName:
          type: string
        lastNameKana:
          type: string
        firstNameKana:
          type: string
        postalCode:
          type: string
        prefecture:
          type: string
        city:
          type: string
        addressLine1:
          type: string
        addressLine2:
          type: string
        createdAt:
          type: string
        updatedAt:
          type: string
    authThumbnailResponse:
      type: object
      properties:
        thumbnailUrl:
          type: string
    userProfileResponse:
      type: object
      properties:
        id:
          type: string
        username:
          type: string
        thumbnailUrl:
          type: string
        selfIntroduction:
          type: string
        isFollow:
          type: boolean
        isFollower:
          type: boolean
        followCount:
          type: integer
        followerCount:
          type: integer
        reviewCount:
          type: integer
        rating:
          type: integer
        products:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
              name:
                type: string
              thumbnailUrl:
                type: string
              authors:
                type: array
                items:
                  type: string
    followListResponse:
      type: object
      properties:
        users:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
              username:
                type: string
              thumbnailUrl:
                type: string
              selfIntroduction:
                type: string
              isFollow:
                type: boolean
        limit:
          type: integer
          format: int64
        offset:
          type: integer
          format: int64
        total:
          type: integer
          format: int64
    followerListResponse:
      type: object
      properties:
        users:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
              username:
                type: string
              thumbnailUrl:
                type: string
              selfIntroduction:
                type: string
              isFollow:
                type: boolean
        limit:
          type: integer
          format: int64
        offset:
          type: integer
          format: int64
        total:
          type: integer
          format: int64
    bookResponse:
      type: object
      properties:
        id:
          type: integer
          format: int64
        title:
          type: string
        titleKana:
          type: string
        description:
          type: string
        isbn:
          type: string
        publisher:
          type: string
        publishedOn:
          type: string
        thumbnailUrl:
          type: string
        rakutenUrl:
          type: string
        rakutenGenreId:
          type: string
        author:
          type: string
        authorKana:
          type: string
        createdAt:
          type: string
        updatedAt:
          type: string
        bookshelf:
          type: object
          properties:
            id:
              type: integer
              format: int64
            status:
              type: integer
              format: int32
            readOn:
              type: string
            impression:
              type: string
            createdAt:
              type: string
            updatedAt:
              type: string
    bookshelfResponse:
      type: object
      properties:
        id:
          type: integer
          format: int64
        status:
          type: integer
          format: int32
        readOn:
          type: string
        impression:
          type: string
        createdAt:
          type: string
        updatedAt:
          type: string
        detail:
          type: object
          properties:
            id:
              type: integer
              format: int64
            title:
              type: string
            titleKana:
              type: string
            description:
              type: string
            isbn:
              type: string
            publisher:
              type: string
            publishedOn:
              type: string
            thumbnailUrl:
              type: string
            rakutenUrl:
              type: string
            rakutenGenreId:
              type: string
            author:
              type: string
            authorKana:
              type: string
            createdAt:
              type: string
            updatedAt:
              type: string
    bookshelfListResponse:
      type: object
      properties:
        books:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
                format: int64
              status:
                type: integer
                format: int32
              readOn:
                type: string
              createdAt:
                type: string
              updatedAt:
                type: string
              detail:
                type: object
                properties:
                  id:
                    type: integer
                    format: int64
                  title:
                    type: string
                  titleKana:
                    type: string
                  description:
                    type: string
                  isbn:
                    type: string
                  publisher:
                    type: string
                  publishedOn:
                    type: string
                  thumbnailUrl:
                    type: string
                  rakutenUrl:
                    type: string
                  rakutenGenreId:
                    type: string
                  author:
                    type: string
                  authorKana:
                    type: string
                  createdAt:
                    type: string
                  updatedAt:
                    type: string
        limit:
          type: integer
          format: int64
        offset:
          type: integer
          format: int64
        total:
          type: integer
          format: int64
    errorResponse:
      type: object
      properties:
        status:
          type: integer
          format: int32
        code:
          type: integer
          format: int32
        message:
          type: string
        errors:
          type: array
          items:
            type: object
            properties:
              field:
                type: string
              reason:
                type: string
