syntax = "proto3";

package chat;

option go_package = "github.com/calmato/gran-book/proto/service/chat";

import "github.com/envoyproxy/protoc-gen-validate/validate/validate.proto";
import "service/chat/room.proto";
import "service/chat/message.proto";

service ChatService {
  rpc ListRoom(ListRoomRequest) returns (RoomListResponse);
  rpc CreateRoom(CreateRoomRequest) returns (RoomResponse);
  rpc CreateMessage(CreateMessageRequest) returns (MessageResponse);
  rpc UploadImage(stream UploadChatImageRequest) returns (MessageResponse);
}

message ListRoomRequest {
  string user_id = 1 [
    (validate.rules).string = {
      min_len: 1
    }
  ];
  int64 limit = 2 [
    (validate.rules).int64 = {
      lte: 200
    }
  ];
  string offset = 3;
}

message CreateRoomRequest {
  repeated string user_ids = 1 [
    (validate.rules).repeated = {
      min_items: 2
      max_items: 2
      unique: true
    }
  ];
}

message CreateMessageRequest {
  string room_id = 1 [
    (validate.rules).string = {
      min_len: 1
    }
  ];
  string user_id = 2 [
    (validate.rules).string = {
      min_len: 1
    }
  ];
  string text = 3 [
    (validate.rules).string = {
      min_len: 1
      max_len: 1000
    }
  ];
}

message UploadChatImageRequest {
  string room_id = 1;
  string user_id = 2;
  bytes image = 3;
  int64 position = 4 [
    (validate.rules).int64 = {
      gte: 0
    }
  ];
}

message RoomResponse {
  Room room = 1;
}

message RoomListResponse {
  repeated Room rooms = 1;
}

message MessageResponse {
  Message message = 1;
}
