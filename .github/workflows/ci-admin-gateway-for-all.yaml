name: BFF(Admin) Build and Test

on:
  push:
    paths:
      - '.github/workflows/ci-admin-gateway-for-all.yaml'
      - 'api/gateway/admin/**'

env:
  PROTOBUF_VERSION: 3.9.0
  PROTOTOOL_VERSION: 1.10.0
  ARTIFACT_TAG: ${{ github.sha }}

jobs:
  setup_proto:
    name: Setup Proto
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: bash
        working-directory: .

    strategy:
      matrix:
        os: [ubuntu-latest]

    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Container build
        run: docker-compose -f docker-compose.ci.yaml build proto

      - name: Generate proto
        run: docker-compose -f docker-compose.ci.yaml run --rm proto make build

      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: artifact-${ARTIFACT_TAG}
          path: api/gateway/admin/proto

  build_and_test:
    name: Build and Test
    needs: setup_proto
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: bash
        working-directory: ./api/gateway/admin

    strategy:
      matrix:
        os: [ubuntu-latest] # exclude: macos-latest, windows-latest
        golang: ['^1.16.7']

    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Use Golang ${{ matrix.golang }}
        uses: actions/setup-go@v2
        with:
          go-version: ${{ matrix.golang }}

      - name: Download artifact for setup proto
        uses: actions/download-artifact@v2
        with:
          name: artifact-${ARTIFACT_TAG}
          path: api/gateway/admin/proto

      - name: Check golang version
        run: go version

      - name: Restore cache
        uses: actions/cache@v2
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Download modules
        if: steps.cache.outputs.cache-hit != 'true'
        run: go mod download

      - name: Setup
        run: make setup

      - name: Fmt
        run: make fmt

      - name: Vet
        run: make vet

      - name: Lint
        run: make lint

      - name: Test
        run: make test

      - name: Build
        run: make build

      - uses: codecov/codecov-action@v2
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          fail_ci_if_error: true
          flags: admin-gateway
          verbose: true
