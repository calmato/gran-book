syntax = "proto3";

package book;

option go_package = "github.com/calmato/gran-book/api/proto/book";

import "github.com/envoyproxy/protoc-gen-validate/validate/validate.proto";
import "book/book_entity.proto";
import "book/common.proto";

service BookService {
  rpc ListBookshelf(ListBookshelfRequest) returns (BookshelfListResponse);
  rpc ListBookReview(ListBookReviewRequest) returns (ReviewListResponse);
  rpc ListUserReview(ListUserReviewRequest) returns (ReviewListResponse);
  rpc ListUserMonthlyResult(ListUserMonthlyResultRequest) returns (UserMonthlyResultListResponse);
  rpc MultiGetBooks(MultiGetBooksRequest) returns (BookListResponse);
  rpc GetBook(GetBookRequest) returns (BookResponse);
  rpc GetBookByIsbn(GetBookByIsbnRequest) returns (BookResponse);
  rpc GetBookshelf(GetBookshelfRequest) returns (BookshelfResponse);
  rpc GetReview(GetReviewRequest) returns (ReviewResponse);
  rpc CreateBook(CreateBookRequest) returns (BookResponse);
  rpc UpdateBook(UpdateBookRequest) returns (BookResponse);
  rpc ReadBookshelf(ReadBookshelfRequest) returns (BookshelfResponse);
  rpc ReadingBookshelf(ReadingBookshelfRequest) returns (BookshelfResponse);
  rpc StackedBookshelf(StackedBookshelfRequest) returns (BookshelfResponse);
  rpc WantBookshelf(WantBookshelfRequest) returns (BookshelfResponse);
  rpc ReleaseBookshelf(ReleaseBookshelfRequest) returns (BookshelfResponse);
  rpc DeleteBook(DeleteBookRequest) returns (Empty);
  rpc DeleteBookshelf(DeleteBookshelfRequest) returns (Empty);
}

message ListBookshelfRequest {
  string user_id = 1 [
    (validate.rules).string = {
      min_len: 1
    }
  ];
  Order order = 2;
  int64 limit = 3 [
    (validate.rules).int64 = {
      lte: 200
    }
  ];
  int64 offset = 4 [
    (validate.rules).int64 = {
      gte: 0
    }
  ];
}

message ListBookReviewRequest {
  int64 book_id = 1 [
    (validate.rules).int64 = {
      gt: 0
    }
  ];
  Order order = 2;
  int64 limit = 3 [
    (validate.rules).int64 = {
      lte: 200
    }
  ];
  int64 offset = 4 [
    (validate.rules).int64 = {
      gte: 0
    }
  ];
}

message ListUserReviewRequest {
  string user_id = 1 [
    (validate.rules).string = {
      min_len: 1
    }
  ];
  Order order = 2;
  int64 limit = 3 [
    (validate.rules).int64 = {
      lte: 200
    }
  ];
  int64 offset = 4 [
    (validate.rules).int64 = {
      gte: 0
    }
  ];
}

message ListUserMonthlyResultRequest {
  string user_id = 1 [
    (validate.rules).string = {
      min_len: 1
    }
  ];
  string since_date = 2 [
    (validate.rules).string = {
      len: 10
    }
  ];
  string until_date = 3 [
    (validate.rules).string = {
      len: 10
    }
  ];
}

message MultiGetBooksRequest {
  repeated int64 book_ids = 1 [
    (validate.rules).repeated = {
      max_items: 200
      unique: true
    }
  ];
}

message GetBookRequest {
  int64 book_id = 1 [
    (validate.rules).int64 = {
      gt: 0
    }
  ];
}

message GetBookByIsbnRequest {
  string isbn = 1 [
    (validate.rules).string = {
      min_len: 10
      max_len: 16
    }
  ];
}

message GetBookshelfRequest {
  string user_id = 1 [
    (validate.rules).string = {
      min_len: 1
    }
  ];
  int64 book_id = 2 [
    (validate.rules).int64 = {
      gt: 0
    }
  ];
}

message GetReviewRequest {
  int64 review_id = 1 [
    (validate.rules).int64 = {
      gt: 0
    }
  ];
}

message CreateBookRequest {
  message Author {
    string name = 1 [
      (validate.rules).string = {
        min_len: 1
        max_len: 32
      }
    ];
    string name_kana = 2 [
      (validate.rules).string = {
        min_len: 1
        max_len: 64
      }
    ];
  }
  string title = 1 [
    (validate.rules).string = {
      min_len: 1
      max_len: 64
    }
  ];
  string title_kana = 2 [
    (validate.rules).string = {
      min_len: 1
      max_len: 128
    }
  ];
  string description = 3 [
    (validate.rules).string = {
      max_len: 2000
    }
  ];
  string isbn = 4 [
    (validate.rules).string = {
      min_len: 10
      max_len: 17
    }
  ];
  string publisher = 5 [
    (validate.rules).string = {
      min_len: 1
      max_len: 32
    }
  ];
  string published_on = 6 [
    (validate.rules).string = {
      min_len: 1
      max_len: 16
    }
  ];
  string thumbnail_url = 7;
  string rakuten_url = 8;
  string rakuten_size = 9;
  string rakuten_genre_id = 10;
  repeated Author authors = 11;
}

message UpdateBookRequest {
  message Author {
    string name = 1 [
      (validate.rules).string = {
        min_len: 1
        max_len: 32
      }
    ];
    string name_kana = 2 [
      (validate.rules).string = {
        min_len: 1
        max_len: 64
      }
    ];
  }
  string title = 1 [
    (validate.rules).string = {
      min_len: 1
      max_len: 64
    }
  ];
  string title_kana = 2 [
    (validate.rules).string = {
      min_len: 1
      max_len: 128
    }
  ];
  string description = 3 [
    (validate.rules).string = {
      max_len: 2000
    }
  ];
  string isbn = 4 [
    (validate.rules).string = {
      min_len: 10
      max_len: 17
    }
  ];
  string publisher = 5 [
    (validate.rules).string = {
      min_len: 1
      max_len: 32
    }
  ];
  string published_on = 6 [
    (validate.rules).string = {
      min_len: 1
      max_len: 16
    }
  ];
  string thumbnail_url = 7;
  string rakuten_url = 8;
  string rakuten_size = 9;
  string rakuten_genre_id = 10;
  repeated Author authors = 11;
}

message DeleteBookRequest {
  int64 book_id = 1 [
    (validate.rules).int64 = {
      gt: 0
    }
  ];
}

message DeleteBookshelfRequest {
  string user_id = 1 [
    (validate.rules).string = {
      min_len: 1
    }
  ];
  int64 book_id = 2 [
    (validate.rules).int64 = {
      gt: 0
    }
  ];
}

message ReadBookshelfRequest {
  string user_id = 1 [
    (validate.rules).string = {
      min_len: 1
    }
  ];
  int64 book_id = 2 [
    (validate.rules).int64 = {
      gt: 0
    }
  ];
  string impression = 3 [
    (validate.rules).string = {
      max_len: 1000
    }
  ];
  string read_on = 4;
}

message ReadingBookshelfRequest {
  string user_id = 1 [
    (validate.rules).string = {
      min_len: 1
    }
  ];
  int64 book_id = 2 [
    (validate.rules).int64 = {
      gt: 0
    }
  ];
}

message StackedBookshelfRequest {
  string user_id = 1 [
    (validate.rules).string = {
      min_len: 1
    }
  ];
  int64 book_id = 2 [
    (validate.rules).int64 = {
      gt: 0
    }
  ];
}

message WantBookshelfRequest {
  string user_id = 1 [
    (validate.rules).string = {
      min_len: 1
    }
  ];
  int64 book_id = 2 [
    (validate.rules).int64 = {
      gt: 0
    }
  ];
}

message ReleaseBookshelfRequest {
  string user_id = 1 [
    (validate.rules).string = {
      min_len: 1
    }
  ];
  int64 book_id = 2 [
    (validate.rules).int64 = {
      gt: 0
    }
  ];
}

message BookResponse {
  Book book = 1;
}

message BookListResponse {
  repeated Book books = 1;
  int64 limit = 2;
  int64 offset = 3;
  int64 total = 4;
}

message BookshelfResponse {
  Bookshelf bookshelf = 1;
}

message BookshelfListResponse {
  repeated Bookshelf bookshelves = 1;
  int64 limit = 2;
  int64 offset = 3;
  int64 total = 4;
}

message ReviewResponse {
  Review review = 1;
}

message ReviewListResponse {
  repeated Review reviews = 1;
  int64 limit = 2;
  int64 offset = 3;
  int64 total = 4;
}

message UserMonthlyResultListResponse {
  repeated MonthlyResult monthly_results = 1;
}

message MonthlyResult {
  int32 year = 1;
  int32 month = 2;
  int64 read_total = 3;
}
