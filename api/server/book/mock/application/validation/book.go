// Code generated by MockGen. DO NOT EDIT.
// Source: internal/application/validation/book.go

// Package mock_validation is a generated GoMock package.
package mock_validation

import (
	input "github.com/calmato/gran-book/api/server/book/internal/application/input"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockBookRequestValidation is a mock of BookRequestValidation interface
type MockBookRequestValidation struct {
	ctrl     *gomock.Controller
	recorder *MockBookRequestValidationMockRecorder
}

// MockBookRequestValidationMockRecorder is the mock recorder for MockBookRequestValidation
type MockBookRequestValidationMockRecorder struct {
	mock *MockBookRequestValidation
}

// NewMockBookRequestValidation creates a new mock instance
func NewMockBookRequestValidation(ctrl *gomock.Controller) *MockBookRequestValidation {
	mock := &MockBookRequestValidation{ctrl: ctrl}
	mock.recorder = &MockBookRequestValidationMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockBookRequestValidation) EXPECT() *MockBookRequestValidationMockRecorder {
	return m.recorder
}

// CreateBook mocks base method
func (m *MockBookRequestValidation) CreateBook(in *input.CreateBook) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateBook", in)
	ret0, _ := ret[0].(error)
	return ret0
}

// CreateBook indicates an expected call of CreateBook
func (mr *MockBookRequestValidationMockRecorder) CreateBook(in interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateBook", reflect.TypeOf((*MockBookRequestValidation)(nil).CreateBook), in)
}
