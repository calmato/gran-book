// Code generated by MockGen. DO NOT EDIT.
// Source: application.go

// Package mock_application is a generated GoMock package.
package mock_application

import (
	context "context"
	reflect "reflect"

	inquiry "github.com/calmato/gran-book/api/internal/information/domain/inquiry"
	gomock "github.com/golang/mock/gomock"
)

// MockInquiryApplication is a mock of InquiryApplication interface.
type MockInquiryApplication struct {
	ctrl     *gomock.Controller
	recorder *MockInquiryApplicationMockRecorder
}

// MockInquiryApplicationMockRecorder is the mock recorder for MockInquiryApplication.
type MockInquiryApplicationMockRecorder struct {
	mock *MockInquiryApplication
}

// NewMockInquiryApplication creates a new mock instance.
func NewMockInquiryApplication(ctrl *gomock.Controller) *MockInquiryApplication {
	mock := &MockInquiryApplication{ctrl: ctrl}
	mock.recorder = &MockInquiryApplicationMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockInquiryApplication) EXPECT() *MockInquiryApplicationMockRecorder {
	return m.recorder
}

// Create mocks base method.
func (m *MockInquiryApplication) Create(ctx context.Context, i *inquiry.Inquiry) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Create", ctx, i)
	ret0, _ := ret[0].(error)
	return ret0
}

// Create indicates an expected call of Create.
func (mr *MockInquiryApplicationMockRecorder) Create(ctx, i interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*MockInquiryApplication)(nil).Create), ctx, i)
}
