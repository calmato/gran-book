load("@io_bazel_rules_go//go:def.bzl", "go_library")

go_library(
    name = "cmd",
    srcs = [
        "exec.go",
        "grpc.go",
        "registry.go",
    ],
    importpath = "github.com/calmato/gran-book/api/service/internal/user/cmd",
    visibility = ["//:__subpackages__"],
    deps = [
        "//config/user",
        "//internal/user/application",
        "//internal/user/infrastructure/repository",
        "//internal/user/infrastructure/storage",
        "//internal/user/infrastructure/validation",
        "//internal/user/interface/server",
        "//internal/user/interface/validation",
        "//pkg/database",
        "//pkg/firebase",
        "//pkg/firebase/authentication",
        "//pkg/firebase/firestore",
        "//pkg/firebase/storage",
        "//pkg/log",
        "//proto/user",
        "@com_github_grpc_ecosystem_go_grpc_middleware//:go_default_library",
        "@com_github_grpc_ecosystem_go_grpc_middleware//logging/zap:go_default_library",
        "@com_github_grpc_ecosystem_go_grpc_middleware//logging/zap/ctxzap:go_default_library",
        "@com_github_grpc_ecosystem_go_grpc_middleware//recovery:go_default_library",
        "@com_github_grpc_ecosystem_go_grpc_middleware//tags:go_default_library",
        "@com_github_grpc_ecosystem_go_grpc_prometheus//:go_default_library",
        "@go_googleapis//google/rpc:errdetails_go_proto",
        "@org_golang_google_api//option",
        "@org_golang_google_grpc//:go_default_library",
        "@org_golang_google_grpc//metadata",
        "@org_golang_google_grpc//peer",
        "@org_golang_google_grpc//status",
        "@org_golang_google_protobuf//encoding/protojson",
        "@org_golang_google_protobuf//proto",
        "@org_golang_x_sync//errgroup",
        "@org_uber_go_zap//:zap",
    ],
)
